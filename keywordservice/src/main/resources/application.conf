akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "WARNING"
  stdout-loglevel = "WARNING"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    enable-additional-serialization-bindings = on
    allow-java-serialization = on
  }
  remote {
    artery {
      enabled = on
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
      leveldb-shared.store {
        # DO NOT USE 'native = off' IN PRODUCTION !!!
        native = off
        dir = "target/shared-journal"
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }
  cluster {
    roles = ["keyword"]
    seed-nodes = ["akka://ARSnovaService@127.0.0.1:8870"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s

    sharding {
      role = "keyword"
      state-store-mode = persistence
    }
  }
}

kamon {
  metric {
    filters {
      akka-actor {
        includes = ["user/**"]
        excludes = ["system/**"]
      }

      akka-dispatcher {
        includes = ["**"]
        excludes = []
      }

      akka-router {
        includes = ["**"]
        excludes = []
      }
    }

  }
  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 10 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    report-system-metrics = false

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "ARSnovaMicroservices"
    }
  }
}

database {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://localhost/arsmic?useSSL=false&serverTimezone=Europe/Berlin"
  properties = {
    databaseName = "arsmic"
    user = "arsnova3"
    password = "arsnova3_prototype"
  }
  user = "arsnova3"
  password = "arsnova3_prototype"
  connectionTimeout = 10 seconds

  numThreads = 10
  keepAliveConnection = true
  maxLifetime = 5 minutes
  maximumPoolSize = 10
  leakDetectionThreshold = 2000
}
