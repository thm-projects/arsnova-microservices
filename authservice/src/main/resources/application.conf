akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "WARNING"
  stdout-loglevel = "WARNING"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    enable-additional-serialization-bindings = on
    allow-java-serialization = on
  }
  remote {
    artery {
      enabled = on
      canonical.hostname = "127.0.0.1"
      canonical.port = 9010
    }
  }
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
      leveldb-shared.store {
        # DO NOT USE 'native = off' IN PRODUCTION !!!
        native = off
        dir = "target/shared-journal"
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }
  cluster {
    roles = ["auth"]
    seed-nodes = ["akka://ARSnovaService@127.0.0.1:8870"]

    sharding {
      role = "auth"
      state-store-mode = persistence
    }
  }
}

database {
  url = "jdbc:postgresql://localhost/arsmic?useSSL=false&serverTimezone=Europe/Berlin"
  properties = {
    databaseName = "arsmic"
    user = "arsnova3"
    password = "arsnova3_prototype"
  }
  user = "arsnova3"
  password = "arsnova3_prototype"
  connectionTimeout = 10 seconds

  numThreads = 10
  keepAliveConnection = true
  maxLifetime = 5 minutes
  maximumPoolSize = 10
  leakDetectionThreshold = 2000
}

logger.scala.slick=WARNING
logger.scala.slick.session=WARNING
