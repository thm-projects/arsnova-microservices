akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "WARNING"
  stdout-loglevel = "WARNING"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    enable-additional-serialization-bindings = on
    allow-java-serialization = on
  }
  remote {
    artery {
      enabled = on
      canonical.hostname = "127.0.0.1"
      canonical.port = 9010
    }
  }
  cluster {
    roles = ["auth"]
    seed-nodes = ["akka://ARSnovaService@127.0.0.1:8870"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    #
    # auto-down-unreachable-after = 10s

    # Settings for the DistributedPubSub extension
    pub-sub {
      # Actor name of the mediator actor, /system/distributedPubSubMediator
      name = distributedPubSubMediator

      # Start the mediator on members tagged with this role.
      # All members are used if undefined or empty.
      role = ""

      # The routing logic to use for 'Send'
      # Possible values: random, round-robin, broadcast
      routing-logic = random

      # How often the DistributedPubSubMediator should send out gossip information
      gossip-interval = 1s

      # Removed entries are pruned after this duration
      removed-time-to-live = 120s

      # Maximum number of elements to transfer in one message when synchronizing the registries.
      # Next chunk will be transferred in next round of gossip.
      max-delta-elements = 3000

      # The id of the dispatcher to use for DistributedPubSubMediator actors.
      # If not specified default dispatcher is used.
      # If specified you need to define the settings of the actual dispatcher.
      use-dispatcher = ""
    }
  }
  extensions = [
    "akka.cluster.pubsub.DistributedPubSub"
  ]
}

database {
  url = "jdbc:postgresql://localhost/arsmic?useSSL=false&serverTimezone=Europe/Berlin"
  properties = {
    databaseName = "arsmic"
    user = "arsnova3"
    password = "arsnova3_prototype"
  }
  user = "arsnova3"
  password = "arsnova3_prototype"
  connectionTimeout = 10 seconds

  numThreads = 10
  keepAliveConnection = true
  maxLifetime = 5 minutes
  maximumPoolSize = 10
  leakDetectionThreshold = 2000
}

logger.scala.slick=WARNING
logger.scala.slick.session=WARNING
